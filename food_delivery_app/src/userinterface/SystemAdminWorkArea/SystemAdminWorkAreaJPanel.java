/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;

import Business.Organization;
import Business.Restaurant.Restaurant;
import Business.Role.SystemAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author MyPC1
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminWorkAreaJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    public SystemAdminWorkAreaJPanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ecosystem=ecosystem;
        populateTree();
    }
    
    public void populateTree(){
        DefaultTreeModel model = (DefaultTreeModel)jTree.getModel();
       // Add the code for draw your system structure shown by JTree
       
        DefaultMutableTreeNode root = (DefaultMutableTreeNode)model.getRoot();
        root.removeAllChildren();
        DefaultMutableTreeNode networks = new DefaultMutableTreeNode("System Admin");
        root.insert(networks, 0);
        
        for(int i=0; i < ecosystem.getUserAccountDirectory().getUserAccountList().size(); i++) {
            UserAccount ui = ecosystem.getUserAccountDirectory().getUserAccountList().get(i);
            if (ui.getRole() instanceof SystemAdminRole)
                networks.add(new DefaultMutableTreeNode(ui.getUsername()));
        }
        
        DefaultMutableTreeNode custList = new DefaultMutableTreeNode("Customer");
        root.insert(custList, 1);
        DefaultMutableTreeNode delList  = new DefaultMutableTreeNode("Delivery Men");
        root.insert(delList, 2);
        DefaultMutableTreeNode restList = new DefaultMutableTreeNode("Restaurant");
        root.insert(restList, 3);
        
        ArrayList<Customer> customerList = this.ecosystem.getCustomerDirectory().getCustomerList();
        for(int i = 0; i < customerList.size(); i++)
            custList.insert(new DefaultMutableTreeNode(customerList.get(i).getName()), i);
        
        ArrayList<DeliveryMan> deliveryList = this.ecosystem.getDeliveryManDirectory().getDeliveryManList();
        for(int i = 0; i < deliveryList.size(); i++)
            delList.insert(new DefaultMutableTreeNode(deliveryList.get(i).getName()), i);
              
        ArrayList<Restaurant> restaurantList = this.ecosystem.getRestaurantDirectory().getRestaurantList();
        for(int i = 0; i < restaurantList.size(); i++)
            restList.insert(new DefaultMutableTreeNode(restaurantList.get(i).getName()), i);
       
        model.reload();

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblSelectedNode = new javax.swing.JLabel();
        manageCustButton = new javax.swing.JButton();
        manageRestaurants = new javax.swing.JButton();
        manageDelManButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 118, Short.MAX_VALUE))
        );

        jSplitPane.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setText("Selected Node:");

        lblSelectedNode.setText("<View_selected_node>");

        manageCustButton.setBackground(new java.awt.Color(0, 0, 51));
        manageCustButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        manageCustButton.setForeground(new java.awt.Color(255, 255, 204));
        manageCustButton.setText("Manage All Customers");
        manageCustButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageCustButtonActionPerformed(evt);
            }
        });

        manageRestaurants.setBackground(new java.awt.Color(0, 0, 51));
        manageRestaurants.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        manageRestaurants.setForeground(new java.awt.Color(255, 255, 204));
        manageRestaurants.setText("Manage Restaurants");
        manageRestaurants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageRestaurantsActionPerformed(evt);
            }
        });

        manageDelManButton.setBackground(new java.awt.Color(0, 0, 51));
        manageDelManButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        manageDelManButton.setForeground(new java.awt.Color(255, 255, 204));
        manageDelManButton.setText("Manage Deliveryman");
        manageDelManButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageDelManButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lblSelectedNode))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(manageRestaurants, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(manageCustButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(manageDelManButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(295, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblSelectedNode))
                .addGap(54, 54, 54)
                .addComponent(manageCustButton)
                .addGap(18, 18, 18)
                .addComponent(manageRestaurants)
                .addGap(18, 18, 18)
                .addComponent(manageDelManButton)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        jSplitPane.setRightComponent(jPanel2);

        add(jSplitPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void nextScreen() {
       CardLayout cl = (CardLayout) userProcessContainer.getLayout();
       cl.next(userProcessContainer); 
    }
    
    private void manageCustButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageCustButtonActionPerformed
       ManageCustomers manageCust = new ManageCustomers(userProcessContainer, ecosystem);
       userProcessContainer.add("ManageCustomers", manageCust);
       nextScreen();
    }//GEN-LAST:event_manageCustButtonActionPerformed

    private void manageRestaurantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageRestaurantsActionPerformed
       ManageRestaurant manage = new ManageRestaurant(userProcessContainer, ecosystem); 
       userProcessContainer.add("ManageRestaurants", manage);
       nextScreen(); 
    }//GEN-LAST:event_manageRestaurantsActionPerformed

    private void manageDelManButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageDelManButtonActionPerformed
       ManageDeliveryMen manage = new ManageDeliveryMen(userProcessContainer, ecosystem); 
       userProcessContainer.add("ManageDeliveryMen", manage);
       nextScreen(); 
    }//GEN-LAST:event_manageDelManButtonActionPerformed

    private void jTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeValueChanged
        
        DefaultMutableTreeNode selectedNode= (DefaultMutableTreeNode)jTree.getLastSelectedPathComponent();
        if(selectedNode!=null){
            lblSelectedNode.setText(selectedNode.toString());
        }
    }//GEN-LAST:event_jTreeValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane;
    private javax.swing.JTree jTree;
    private javax.swing.JLabel lblSelectedNode;
    private javax.swing.JButton manageCustButton;
    private javax.swing.JButton manageDelManButton;
    private javax.swing.JButton manageRestaurants;
    // End of variables declaration//GEN-END:variables
}
