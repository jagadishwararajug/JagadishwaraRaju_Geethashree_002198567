
package ui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.Uber;

public class ViewCarsPanel extends javax.swing.JPanel {

    private Uber uber;

    /**
     * Creates new form ViewCarsPanel
     */
    public ViewCarsPanel(Uber uber) {
        initComponents();
        this.uber = uber;
        populateTable(this.uber.getAllCars());
        carsTable.setShowHorizontalLines(true);
        carsTable.setShowVerticalLines(true);
    }
    
    private void populateTable(List<Car> cars) {
        if (cars == null) 
            return;
        
        DefaultTableModel model = (DefaultTableModel) carsTable.getModel();
        model.setRowCount(0);
        SimpleDateFormat formatter = new SimpleDateFormat("MM/dd/YYYY");  
        for (Car c: cars) {
            Object[] row = new Object[11];
            row[0] = c;
            row[1] = c.getModelNumber();
            row[2] = c.getNumSeats();
            row[3] = c.getDriver().getName();
            row[4] = c.isIsAvailable();
            row[5] = c.getCarType();
            row[6] = c.getManufactureYear();
            row[7] = c.getSerialNumber();
            row[8] = c.getMaintenanceCertificate().getCertificate();
            row[9] = formatter.format(c.getMaintenanceCertificate().getValidTill());
            row[10] = c.getCity();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        carsTable = new javax.swing.JTable();
        availCarsButton = new javax.swing.JButton();
        allCarsButton = new javax.swing.JButton();
        allUnavailButton = new javax.swing.JButton();
        findManufacturerText = new javax.swing.JTextField();
        findManufacturerButton = new javax.swing.JButton();
        manufacturerYearText = new javax.swing.JTextField();
        manufacturerYearButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        maxSeatsText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        minSeatsText = new javax.swing.JTextField();
        seatsFindButton = new javax.swing.JButton();
        serialNumText = new javax.swing.JTextField();
        serialNumButton = new javax.swing.JButton();
        modelNumText = new javax.swing.JTextField();
        modelNumButton = new javax.swing.JButton();
        allManuButton = new javax.swing.JButton();
        lastUpdateButton = new javax.swing.JButton();
        cityText = new javax.swing.JTextField();
        cityButton = new javax.swing.JButton();
        expiredLicenseButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(253, 253, 223));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("View Cars");

        carsTable.setBackground(new java.awt.Color(253, 253, 223));
        carsTable.setBorder(new javax.swing.border.MatteBorder(null));
        carsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Manufacturer", "Model Number", "Seats", "Driver", "Availability", "Car Type", "Manufacture Year", "Serial Number", "Maintenance Certificate", "Certificate Expiration", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carsTable);

        availCarsButton.setBackground(new java.awt.Color(38, 55, 85));
        availCarsButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        availCarsButton.setText("Find First Available Passenger Car");
        availCarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availCarsButtonActionPerformed(evt);
            }
        });

        allCarsButton.setBackground(new java.awt.Color(38, 55, 85));
        allCarsButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        allCarsButton.setText("Find All Available Cars");
        allCarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allCarsButtonActionPerformed(evt);
            }
        });

        allUnavailButton.setBackground(new java.awt.Color(38, 55, 85));
        allUnavailButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        allUnavailButton.setText("Find All Unavailable Cars");
        allUnavailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allUnavailButtonActionPerformed(evt);
            }
        });

        findManufacturerButton.setBackground(new java.awt.Color(38, 55, 85));
        findManufacturerButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        findManufacturerButton.setText("Find Cars From Manufacturer");
        findManufacturerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findManufacturerButtonActionPerformed(evt);
            }
        });

        manufacturerYearText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manufacturerYearTextActionPerformed(evt);
            }
        });

        manufacturerYearButton.setBackground(new java.awt.Color(38, 55, 85));
        manufacturerYearButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        manufacturerYearButton.setText("Find Cars Manufactured in Year");
        manufacturerYearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manufacturerYearButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Min Seats: ");

        jLabel3.setText("Max Seats: ");

        seatsFindButton.setBackground(new java.awt.Color(38, 55, 85));
        seatsFindButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        seatsFindButton.setText("Find Cars With Specified Number of Seats");
        seatsFindButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatsFindButtonActionPerformed(evt);
            }
        });

        serialNumButton.setBackground(new java.awt.Color(38, 55, 85));
        serialNumButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        serialNumButton.setText("Find Cars with Serial Number");
        serialNumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialNumButtonActionPerformed(evt);
            }
        });

        modelNumButton.setBackground(new java.awt.Color(38, 55, 85));
        modelNumButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modelNumButton.setText("Find Cars with Model Number");
        modelNumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelNumButtonActionPerformed(evt);
            }
        });

        allManuButton.setBackground(new java.awt.Color(38, 55, 85));
        allManuButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        allManuButton.setText("Get All Car Manufacturers in Uber");
        allManuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allManuButtonActionPerformed(evt);
            }
        });

        lastUpdateButton.setBackground(new java.awt.Color(38, 55, 85));
        lastUpdateButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lastUpdateButton.setText("Get last catalog update time");
        lastUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastUpdateButtonActionPerformed(evt);
            }
        });

        cityButton.setBackground(new java.awt.Color(38, 55, 85));
        cityButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cityButton.setText("Get cars in specified city");
        cityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityButtonActionPerformed(evt);
            }
        });

        expiredLicenseButton.setBackground(new java.awt.Color(38, 55, 85));
        expiredLicenseButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        expiredLicenseButton.setText("List cars with expired license certificates");
        expiredLicenseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expiredLicenseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(availCarsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(allCarsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(allUnavailButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(allManuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lastUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(findManufacturerText, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findManufacturerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(manufacturerYearText, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(minSeatsText, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(maxSeatsText, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(seatsFindButton, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                                    .addComponent(manufacturerYearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(serialNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(serialNumButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(modelNumText, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modelNumButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cityButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(expiredLicenseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(availCarsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allCarsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allUnavailButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findManufacturerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findManufacturerButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manufacturerYearText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manufacturerYearButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(maxSeatsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(minSeatsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsFindButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serialNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serialNumButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelNumButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allManuButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastUpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(expiredLicenseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void allCarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allCarsButtonActionPerformed
        // TODO add your handling code here:
        List<Car> carList = uber.getAvailableCars();
        JOptionPane.showMessageDialog(this, "Number of available cars = " + carList.size());
        populateTable(carList);
    }//GEN-LAST:event_allCarsButtonActionPerformed

    private void availCarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availCarsButtonActionPerformed
        // TODO add your handling code here:
        List<Car> carList = new ArrayList<>();
        carList.add(uber.findFirstAvailablePassengerCar());
        populateTable(carList);
    }//GEN-LAST:event_availCarsButtonActionPerformed

    private void allUnavailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allUnavailButtonActionPerformed
        // TODO add your handling code here:
        List<Car> carList = uber.getUnavailableCars();
        JOptionPane.showMessageDialog(this, "Number of unavailable cars = " + carList.size());
        populateTable(carList);
    }//GEN-LAST:event_allUnavailButtonActionPerformed

    private void findManufacturerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findManufacturerButtonActionPerformed
        // TODO add your handling code here:
        String manu = findManufacturerText.getText();
        if (manu == null || manu.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a value for the manufacturer.");
            return;
        }
        manu = manu.trim();
        List<Car> carList = uber.getCarsFromManufacturer(manu);
        JOptionPane.showMessageDialog(this, "Number of cars from " + manu + " = " + carList.size());
        populateTable(carList);
    }//GEN-LAST:event_findManufacturerButtonActionPerformed

    private void manufacturerYearTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manufacturerYearTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manufacturerYearTextActionPerformed

    private Integer parseInt(String inp, String field) {
        if (inp == null || inp.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a value for the " + field + ".");
            return null;
        }
        inp = inp.trim();
        try{
            int num = Integer.valueOf(inp);
            return num;
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid year for the " + field + ".");
            return null;
        }
    }
    private void manufacturerYearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manufacturerYearButtonActionPerformed
        // TODO add your handling code here:
        Integer year = parseInt(manufacturerYearText.getText(), "manufactured year");
        
        if (year == null) 
            return;
        
        populateTable(uber.getCarsFromYear(year));
    }//GEN-LAST:event_manufacturerYearButtonActionPerformed

    private void seatsFindButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatsFindButtonActionPerformed
        // TODO add your handling code here:
        Integer minSeats = parseInt(minSeatsText.getText(), "minimum seats");
        Integer maxSeats = parseInt(maxSeatsText.getText(), "maximum seats");
        
        if ((minSeats == null) || (maxSeats == null) )
            return;
        
        populateTable(uber.filterCarsBySeats(minSeats, maxSeats));
    }//GEN-LAST:event_seatsFindButtonActionPerformed

    private void serialNumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialNumButtonActionPerformed
        // TODO add your handling code here:
        String inp = serialNumText.getText();
        String field = "serial number";
        if (inp == null || inp.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a value for the " + field + ".");
            return;
        }
        inp = inp.trim();
        
        List<Car> carList = new ArrayList<>();
        carList.add(uber.findCarBySerialNumber(inp));
        populateTable(carList);
    }//GEN-LAST:event_serialNumButtonActionPerformed

    private void modelNumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelNumButtonActionPerformed
        // TODO add your handling code here:
        String inp = modelNumText.getText();
        String field = "model number";
        if (inp == null || inp.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a value for the " + field + ".");
            return;
        }
        inp = inp.trim();
        
        populateTable(uber.filterCarsByModelNumber(inp));
    }//GEN-LAST:event_modelNumButtonActionPerformed

    private void allManuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allManuButtonActionPerformed
        // TODO add your handling code here:
        List<String> manus = uber.getAllManufacturers();
        
        String s = String.join(", ", manus);
        
        JOptionPane.showMessageDialog(this, "List of manufacturers : " + s);
    }//GEN-LAST:event_allManuButtonActionPerformed

    private void lastUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastUpdateButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Last catalog update time : " + uber.getLastUpdateTime().toString());
    }//GEN-LAST:event_lastUpdateButtonActionPerformed

    private void cityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityButtonActionPerformed
        // TODO add your handling code here:
        String inp = cityText.getText();
        String field = "city";
        if (inp == null || inp.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a value for the " + field + ".");
            return;
        }
        inp = inp.trim();
        
        populateTable(uber.filterCarsByCity(inp));
    }//GEN-LAST:event_cityButtonActionPerformed

    private void expiredLicenseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expiredLicenseButtonActionPerformed
        // TODO add your handling code here:
        List<Car> carList = uber.getCarsWithExpiredManitanenceCerts();
        if((carList == null) || (carList.size() <= 0) ) {
            JOptionPane.showMessageDialog(this, "There are no cars with expired licenses.");
            return;
        }
        populateTable(carList);
    }//GEN-LAST:event_expiredLicenseButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allCarsButton;
    private javax.swing.JButton allManuButton;
    private javax.swing.JButton allUnavailButton;
    private javax.swing.JButton availCarsButton;
    private javax.swing.JTable carsTable;
    private javax.swing.JButton cityButton;
    private javax.swing.JTextField cityText;
    private javax.swing.JButton expiredLicenseButton;
    private javax.swing.JButton findManufacturerButton;
    private javax.swing.JTextField findManufacturerText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lastUpdateButton;
    private javax.swing.JButton manufacturerYearButton;
    private javax.swing.JTextField manufacturerYearText;
    private javax.swing.JTextField maxSeatsText;
    private javax.swing.JTextField minSeatsText;
    private javax.swing.JButton modelNumButton;
    private javax.swing.JTextField modelNumText;
    private javax.swing.JButton seatsFindButton;
    private javax.swing.JButton serialNumButton;
    private javax.swing.JTextField serialNumText;
    // End of variables declaration//GEN-END:variables
}
